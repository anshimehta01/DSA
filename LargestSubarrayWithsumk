#include <iostream>
#include <vector>
using namespace std;

int longestSubarrayWithSumK(vector<int>& nums, int k) {
    int n = nums.size();
    int left = 0, sum = 0, maxLen = 0;

    for (int right = 0; right < n; right++) {
        sum += nums[right];  // include current element in sum

        // shrink window from the left if sum exceeds k
        while (sum > k && left <= right) {
            sum -= nums[left];
            left++;
        }

        // if sum equals k, update maxLen
        if (sum == k) {
            maxLen = max(maxLen, right - left + 1);
        }
    }

    return maxLen;
}

int main() {
    vector<int> nums = {1, 2, 1, 1, 1, 3};
    int k = 4;
    cout << "Longest subarray length with sum " << k << " is: " 
         << longestSubarrayWithSumK(nums, k) << endl;
    return 0;
}
